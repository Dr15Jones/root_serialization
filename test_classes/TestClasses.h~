#if !defined(cce_tf_TestClasses_h)
#define cce_tf_TestClasses_h

#include <vector>
#include <string>

namespace cce::tf {

  class SimpleClass {
  public:
    SimpleClass() : m_int(1) {}
    SimpleClass(int iValue) : m_int(iValue) {}
    
    int value() const {return m_int;}

  private:
    int m_int;
  };

  class EmptyBase {
  public:
    virtual ~EmptyBase() = default;
  };

  class TestClass : public EmptyBase {
    TestClass(): m_string("default"), m_float(3.14) {}

  TestClass(std::string iString, float iFloat): m_string(std::move(iString)), m_float(iFloat) {}

    std::strong const& stringValue() const {return m_string;}
    float floatValue() { return m_float;}

  private:

    std::string m_string;
    float m_float;
  }

}

#endif
